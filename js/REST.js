/**
 * jQuery App the consumes the RMaps REST endpoint for lat./long. and basic post data
 *
 * Response from the get_folders endpoint looks like this: ['ID', 'title', 'infowindow', 'see_more', 'permalink', 'lat', 'lon', 'current']
 */
;var REST = (
	function ( $ ) {

		/**
		 * Set object properties and build the endpoint objects
		 */
		var rdb = document.getElementById( 'rdb' ),
			$rdb = $( rdb ),
			folders = {},
			api_settings = {
				api_base: '',
				endpoints: {
					create_folders: {route: 'post-folders/', method: 'POST'},
					save_token: {route: 'post-token/', method: 'POST'}
				}
			};

		/**
		 * This function will be called on document.ready or at any other time to instantiate the object.
		 *
		 * @param data  The JSON passed in by the admin app
		 * @param token The app token generated by the OD API
		 */
		var init = function ( data, token ) {

			/** Get the JSON from the Database App */
			od_json = data;

			api_settings.api_base = rdb_options.site_url + '/wp-json/restful-od/v1/';

			if( ! only_once ) {
				save_token( token );
			}

			create_folders();

			$( "<pre>" ).html( syntax_highlight( od_json ) ).appendTo( "#json-response" );
		};

		/**
		 * Save the token through the Database API
		 *
		 * @param token
		 */
		var save_token = function( token ) {
			do_ajax( api_settings.endpoints.save_token, token )
				.done( function ( data, statusMessage, xhr ) {
					console.log( 'Token saved.' );
				} )
				.fail( function ( data ) {
					console.log( data );
				} );

			only_once = true;
		};

		/**
		 * Used to display the response JSON in the "debug info" section
		 *
		 * @param obj   The JSON
		 *
		 * @returns {*|{style, text, priority, click}|string|void|XML}
		 */
		var syntax_highlight = function ( obj ) {
			var json = JSON.stringify( obj, undefined, 2 );
			json = json.replace( /&/g, '&amp;' ).replace( /</g, '&lt;' ).replace( />/g, '&gt;' );
			return json.replace( /("(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\"])*"(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)/g,
				function ( match ) {
					var cls = 'number';
					if ( /^"/.test( match ) ) {
						if ( /:$/.test( match ) ) {
							cls = 'key';
						} else {
							cls = 'string';
						}
					} else if ( /true|false/.test( match ) ) {
						cls = 'boolean';
					} else if ( /null/.test( match ) ) {
						cls = 'null';
					}
					return '<span class="' + cls + '">' + match + '</span>';
				}
			);
		};

		/**
		 * Sends the OD API response to the WP REST endpoint
		 *
		 * Also reveals a loading div during page load
		 */
		var create_folders = function () {
			var $loading = $( document.getElementById( 'loading' ) );

			do_ajax( api_settings.endpoints.create_folders, od_json )
				.done( function ( data ) {
					$loading.addClass( 'open' );
					if ( od_json['@odata.nextLink'] ) {
						OD_Admin_App.do_request( od_json['@odata.nextLink'] );
					} else {
						$loading.removeClass( 'open' );
					}
				} )
				.fail( function ( data ) {
					console.log( data.responseText );
				} );
		};

		/**
		 * Generic wrapper for the $.ajax() function
		 *
		 * @param endpoint
		 * @param data
		 * @returns REST response
		 */
		var do_ajax = function ( endpoint, data ) {
			return $.ajax( {
				url: api_settings.api_base + endpoint.route,
				method: endpoint.method,
				data: data
			} );
		};

		/** Public API */
		return {
			init: init
		};
	}
)( jQuery );
